# Generated by Django 3.0.9 on 2020-09-21 18:49

import app_ccf.models
import django.contrib.postgres.fields
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Application',
            fields=[
                ('type_of_work', models.CharField(blank=True, choices=[('House cleaning', 'house_cleaning'), ('Nanny', 'nanny'), ('Home care', 'home_care'), ('Other', 'none_of_the_above')], default='House cleaning', max_length=15)),
                ('vouchercode_str', models.CharField(max_length=200)),
                ('first_name', models.CharField(max_length=200)),
                ('last_name', models.CharField(max_length=200)),
                ('payment_confirmed_reminder_sent', models.BooleanField(default=False)),
                ('age_range', models.CharField(choices=[('17', '17_or_younger'), ('18-29', '18-29'), ('30-49', '30-49'), ('50-69', '50-69'), ('70+', '70_or_older')], default='17', max_length=6)),
                ('household_size', models.SmallIntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(1)])),
                ('household_income', models.CharField(choices=[('<20k', 'under_20k'), ('20,000-39,999', 'between_20k_39k'), ('40,000-59,999', 'between_40k_59k'), ('60,000-79,999', 'between_60k_79k'), ('80,000+', 'above_80k')], default='<20k', max_length=20)),
                ('ethnicity', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(blank=True, max_length=50), blank=True, default=list, size=8)),
                ('gender', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(blank=True, max_length=50), blank=True, default=list, size=8)),
                ('language', models.CharField(choices=[('es', 'Español'), ('en', 'English')], default='en', max_length=15)),
                ('phone_number', models.CharField(max_length=50, validators=[django.core.validators.RegexValidator('^[+][0-9]{8,}$', 'phone_number_incorrect_format')])),
                ('email', models.EmailField(blank=True, max_length=254, validators=[django.core.validators.EmailValidator()])),
                ('addr1', models.CharField(max_length=200, validators=[django.core.validators.RegexValidator('^.[^?@]*$', 'street_address_incorrect_format')])),
                ('addr2', models.CharField(blank=True, max_length=100, validators=[django.core.validators.RegexValidator('^.[^?@]*$', 'street_address_incorrect_format')])),
                ('city', models.CharField(max_length=100, validators=[django.core.validators.RegexValidator('^[^0-9_!¡?÷?¿/\\+=@#$%ˆ&*(){}|~<>;:[\\]]+$', 'no_special_characters_allowed')])),
                ('state', models.CharField(max_length=100)),
                ('zip_code', models.CharField(max_length=5)),
                ('usps_verified', models.BooleanField(default=False)),
                ('usps_standardized', models.BooleanField(default=False)),
                ('signature', models.CharField(max_length=200)),
                ('application_id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ('submitted_date', models.DateTimeField()),
                ('status', models.CharField(choices=[('submitted', 'Submitted'), ('approved', 'Approved'), ('needs_review', 'Needs Review'), ('rejected', 'Rejected'), ('sent_for_payment', 'Sent For Payment'), ('payment_confirmed', 'Payment Confirmed'), ('reissue_requested', 'Reissue Requested'), ('reissue_confirmed', 'Reissue Confirmed')], default='submitted', max_length=40)),
                ('status_last_modified', models.DateTimeField(null=True)),
                ('note', models.CharField(blank=True, max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='PreapprovedAddress',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('addr1', models.CharField(max_length=200)),
                ('zip_code', models.CharField(max_length=5)),
                ('city', models.CharField(max_length=100)),
                ('state', models.CharField(max_length=100)),
                ('note', models.CharField(blank=True, max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='VoucherCodeAttempt',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ip_address', models.GenericIPAddressField()),
                ('action', models.IntegerField(choices=[(0, 'Voucher Code Check'), (1, 'Application Review')])),
                ('time', models.DateTimeField(auto_now_add=True)),
                ('code', models.CharField(max_length=20)),
                ('status', models.IntegerField(choices=[(0, 'Success'), (1, 'Code Not Found'), (2, 'Code Already Used'), (3, 'Code Expired'), (4, 'Code Invalidated')])),
            ],
        ),
        migrations.CreateModel(
            name='VoucherCodeBatch',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField()),
                ('user', models.CharField(max_length=20)),
                ('num_codes', models.IntegerField(validators=[django.core.validators.MinValueValidator(1)])),
                ('code_length', models.IntegerField(validators=[django.core.validators.MinValueValidator(1)])),
                ('alphabet', models.CharField(max_length=100)),
                ('base_amount', models.DecimalField(decimal_places=2, max_digits=7)),
                ('expiration_date', models.DateTimeField(validators=[django.core.validators.MinValueValidator(limit_value=app_ccf.models.get_datetime_now_utc)])),
                ('affiliate', models.CharField(max_length=50)),
                ('campaign', models.CharField(max_length=50)),
                ('channel', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='VoucherCode',
            fields=[
                ('code', models.CharField(max_length=20, primary_key=True, serialize=False, validators=[django.core.validators.RegexValidator('^[A-z0-9]+$', 'voucher_code_invalid_format')])),
                ('added_amount', models.DecimalField(decimal_places=2, max_digits=7)),
                ('is_active', models.BooleanField(default=True)),
                ('application', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='app_ccf.Application')),
                ('batch', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='app_ccf.VoucherCodeBatch')),
            ],
        ),
        migrations.CreateModel(
            name='StatusUpdate',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('submitted', 'Submitted'), ('approved', 'Approved'), ('needs_review', 'Needs Review'), ('rejected', 'Rejected'), ('sent_for_payment', 'Sent For Payment'), ('payment_confirmed', 'Payment Confirmed'), ('reissue_requested', 'Reissue Requested'), ('reissue_confirmed', 'Reissue Confirmed')], default='submitted', max_length=40)),
                ('date', models.DateTimeField(auto_now_add=True)),
                ('application', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app_ccf.Application')),
            ],
        ),
        migrations.AddConstraint(
            model_name='preapprovedaddress',
            constraint=models.UniqueConstraint(fields=('addr1', 'zip_code'), name='unique address'),
        ),
    ]
