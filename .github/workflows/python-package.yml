# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Python package

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:

    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:10.8
        env:
          POSTGRES_USER: myprojectuser
          POSTGRES_PASSWORD: password
          POSTGRES_DB: myproject
        ports:
          - 5432:5432
        # needed because the postgres container does not provide a healthcheck
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5
    env:
      DJANGO_DEBUG: True
      SECURE_COOKIE: False
      DJANGO_SECRET_KEY: ${{ secrets.DJANGO_SECRET_KEY }}
      SPECIAL_AWS_ACCESS_KEY_ID: ${{ secrets.SPECIAL_AWS_ACCESS_KEY_ID }}
      SPECIAL_AWS_SECRET_ACCESS_KEY: ${{ secrets.SPECIAL_AWS_SECRET_ACCESS_KEY }}
      TWILIO_SMS_SENDER: ${{ secrets.TWILIO_SMS_SENDER }}
      TWILIO_ACCOUNT_SID: ${{ secrets.TWILIO_ACCOUNT_SID }}
      TWILIO_AUTH_TOKEN: ${{ secrets.TWILIO_AUTH_TOKEN }}
      TWILIO_SERVICE_SID: ${{ secrets.TWILIO_SERVICE_SID }}
      USPS_USER_ID: ${{ secrets.USPS_USER_ID }}
    strategy:
      matrix:
        python-version: [3.7]

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 pytest
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    - name: Compile messages
      run: |
        sudo mkdir -p "/var/app/log"
        sudo chown `whoami` /var/app/log/
        touch /var/app/log/ccf.log
        sudo apt-get install -y gettext
        python manage.py compilemessages
        python manage.py collectstatic
    - name: Test
      run: |
        python manage.py test
